name: app-deployment
on:
  push:
    branches:    
      - dev
      - master
      - main
    tags:        
      - v2
    pull_request:
      branches:
        - '*'
  env:
    MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode -DuniqueVersion=false"
    SONAR_ANALYSIS_OPTS: >-
      -Dsonar.projectKey=<name> 
      -Dsonar.host.url=<url>
      -Dsonar.login=<login>

  jobs:
    build-jar: 
      runs-on: maven:3-jdk-11
      steps:
        - run: mvn ${{ env.MAVEN_CLI_OPTS }} clean install scoverage:report
        - uses: actions/upload-artifact@v3
          with:
            path: ./target/

    sonar-analysis:
      needs: build-jar
      runs-on: sonar-scanner-cli:latest
      steps:
        - run: sonar-scanner ${{ env.SONAR_ANALYSIS_OPTS }}

    docker-pkg:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: login to docker hun
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
            uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: my-docker-hub-namespace/my-docker-hub-repository
        - name: build and push img
          uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
    deploy-img:
      needs: docker-pkg
      runs-on: ubuntu-latest
      steps: 
        - name: install SSH keys
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"
